version: "3.8"

services:
  db:
    restart: unless-stopped
    image: postgres:16.1
    volumes:
      - postgres_db:/var/lib/postgresql/data
    env_file:
      - backend/app/.env
    ports:
      - 5432:5432

  backend:
    build: ./backend
    env_file:
      - backend/app/.env
    command: "sh -c 'uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload'"
    ports:
      - 8000:8000
    volumes:
      - ./backend/app:/app
    depends_on:
      - db

  redis_server:
    image: redis:alpine
    env_file: backend/app/.env
    ports:
      - 6379:6379

  celery_worker:
    build: ./backend
    env_file: backend/app/.env
    command: "celery -A app.main.celery worker -l info"
    volumes:
      - ./backend/app:/app
    depends_on:
      - db
      - redis_server

  flower:
    build: ./backend
    command: "celery --broker=redis://redis_server:6379 flower --port=5555"
    env_file:
      - backend/app/.env
    ports:
      - 5555:5555
    depends_on:
      - backend
      - redis_server
      - celery_worker

  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.10
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  postgres_db:
